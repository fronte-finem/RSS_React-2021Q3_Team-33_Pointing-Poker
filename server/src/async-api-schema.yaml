asyncapi: 2.1.0

info:
  title: Pointing Poker
  version: 1.0.0
  description: |
    Приложение для проведения сессий по оценке сложности предстоящей работы или
    относительного объёма решаемых задач при разработке программного обеспечения

servers:
  demo:
    url: localhost
    protocol: wss

channels:
  /:
    publish:
      summary: Набор событий инициируемых клиентом
      message:
        oneOf:
          - $ref: '#/components/messages/CreateGame'
          - $ref: '#/components/messages/JoinGame'
          - $ref: '#/components/messages/AddUser'
          - $ref: '#/components/messages/KickUser'
          - $ref: '#/components/messages/KickVote'
          - $ref: '#/components/messages/NewMessage'
          - $ref: '#/components/messages/AddIssue'
          - $ref: '#/components/messages/AddGameSettings'
          - $ref: '#/components/messages/StartGame'
          - $ref: '#/components/messages/CancelGame'
          - $ref: '#/components/messages/EndGame'
          - $ref: '#/components/messages/StartRound'
          - $ref: '#/components/messages/AddScore'

    subscribe:
      summary: Набор событий инициируемыех сервером
      message:
        oneOf:
          - $ref: '#/components/messages/UserJoined'
          - $ref: '#/components/messages/UsersList'
          - $ref: '#/components/messages/KickVoteStarted'
          - $ref: '#/components/messages/KickVoteEnded'
          - $ref: '#/components/messages/UserKickResult'
          - $ref: '#/components/messages/NewMessageReceived'
          - $ref: '#/components/messages/MessagesList'
          - $ref: '#/components/messages/IssueAdded'
          - $ref: '#/components/messages/IssuesList'
          - $ref: '#/components/messages/GameStarted'
          - $ref: '#/components/messages/GameCanceled'
          - $ref: '#/components/messages/GameEnded'
          - $ref: '#/components/messages/RoundStarted'
          - $ref: '#/components/messages/RoundEnded'

components:
  schemas:
    User:
      description: Объект пользователя игры (дилер/игрок/набдюдатель)
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: [string, 'null']
        jobPosition:
          type: [string, 'null']
        avatar:
          type: [string, 'null']
        role:
          type: string
          enum:
            - 'dealer'
            - 'gamer'
            - 'spectator'

    ChatMessage:
      description: Обект сообщения чата
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        message:
          type: string

    Issue:
      description: Обект задачи для оценки в процессе игры
      type: object
      properties:
        title:
          type: string
        priority:
          type: string
          enum:
            - high
            - low

    Score:
      description: Значение игровой карты (число и названи особенной карты)
      type: [number, string]

    UserScore:
      description: Объект оценки поставленной игроком
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        score:
          $ref: '#/components/schemas/Score'

    RoundResult:
      description: Массив оценок выставленных игроками
      type: array
      items:
        $ref: '#/components/schemas/UserScore'

    GameResult:
      description: Массив всех оценённых задач
      type: array
      items:
        type: object
        properties:
          issue:
            $ref: '#/components/schemas/Issue'
          result:
            $ref: '#/components/schemas/RoundResult'

    CardSet:
      description: Тип набора карт - числа Фибоначчи, степени двойки или массив собственной последовательности
      oneOf:
        - type: string
          enum:
            - fibb
            - pow2
        - type: array
          items:
            $ref: '#/components/schemas/Score'

    GameSettings:
      description: Набор настроек игры
      type: object
      properties:
        dealerGamer:
          description: будет ли дилер принимать участие в игре
          type: boolean
        cardsSet:
          description: какой набор карточек будет использоваться
          $ref: '#/components/schemas/CardSet'
        autoJoinToGame:
          description: впускать автоматически всех новых участников, если игра уже началась или впускать через механизм admit/reject
          type: boolean
        autoOpenCards:
          description: будут ли карты переворачиваться автоматически как только все проголосуют
          type: boolean
        changeAfterRoundEnd:
          description: можно ли менять свой выбор после того как все карты уже перевернуты
          type: boolean
        timeout:
          description: конфигурации времени таймера или null если он ненужен
          type: [number, 'null']

  messages:
    CreateGame:
      name: 'create game'
      x-ack: # Result - new game ID or error
        args:
          type: object
          properties:
            gameId:
              type: [string, 'null']
            error:
              type: [string, 'null']

    JoinGame:
      name: 'join game'
      payload:
        description: game-ID
        type: string
      x-ack: # Validation on join to game by given ID
        args:
          type: object
          properties:
            error:
              type: [string, 'null']

    AddUser:
      name: 'add user'
      payload:
        type: object
        properties:
          user:
            $ref: '#/components/schemas/User'
      x-ack: # Validation on add user
        args:
          type: object
          properties:
            error:
              type: [string, 'null']

    UserJoined:
      name: 'user joined'
      payload:
        type: object
        properties:
          user:
            $ref: '#/components/schemas/User'
          numUsers:
            type: integer

    UsersList:
      name: 'users list'
      payload:
        type: array
        items:
          $ref: '#/components/schemas/User'

    KickUser:
      name: 'kick user'
      payload:
        type: object
        properties:
          user:
            $ref: '#/components/schemas/User'

    KickVoteStarted:
      name: 'kick vote started'
      payload:
        type: object
        properties:
          initiator:
            description: user started vote
            $ref: '#/components/schemas/User'
          user:
            description: user requested to be kiked
            $ref: '#/components/schemas/User'

    KickVoteEnded:
      name: 'kick vote ended'

    KickVote:
      name: 'kick vote'
      payload:
        type: boolean

    UserKickResult:
      name: 'kick user result'
      payload:
        type: object
        properties:
          user:
            $ref: '#/components/schemas/User'
          kiked:
            type: boolean

    NewMessage:
      name: 'new message'
      payload:
        type: string

    NewMessageReceived:
      name: 'new message'
      payload:
        $ref: '#/components/schemas/ChatMessage'

    MessagesList:
      name: 'messages list'
      payload:
        type: array
        items:
          $ref: '#/components/schemas/ChatMessage'

    AddIssue:
      name: 'add issue'
      payload:
        $ref: '#/components/schemas/Issue'

    IssueAdded:
      name: 'add issue'
      payload:
        $ref: '#/components/schemas/Issue'

    IssuesList:
      name: 'issues list'
      payload:
        type: array
        items:
          $ref: '#/components/schemas/Issue'

    AddGameSettings:
      name: 'add game settings'
      payload:
        $ref: '#/components/schemas/GameSettings'

    StartGame:
      name: 'start game'

    GameStarted:
      name: 'start game'
      payload:
        $ref: '#/components/schemas/GameSettings'

    CancelGame:
      name: 'cancel game'

    GameCanceled:
      name: 'cancel game'

    EndGame:
      name: 'end game'

    GameEnded:
      name: 'end game'
      payload:
        $ref: '#/components/schemas/GameResult'

    StartRound:
      name: 'start round'

    RoundStarted:
      name: 'start round'

    RoundEnded:
      name: 'end round'
      payload:
        $ref: '#/components/schemas/RoundResult'

    AddScore:
      name: 'add score'
      payload:
        $ref: '#/components/schemas/Score'
